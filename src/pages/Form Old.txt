import { useState } from 'react';
import supabase from '../supabase';
import infractionOptions from '../infractionOptions';

type ServiceType = 'ordinario' | 'operacao' | 'ras';
type SectorType = 'GEOTRAN - 1º Distrito' | 'GEOTRAN - 2º Distrito' | 'GEOTRAN - 3º/4º Distrito' | '1º Distrito' | '2º Distrito' | '3º Distrito' | '4º Distrito' | 'GEDAM' | 'GRE' | 'GMAP' | 'ROMU' | 'RAS' | 'Operação';

interface Infraction {
  infraction_type: string;
  quantity: number;
  report_uid?: string;
}

interface FormData {
  responsible_name: string;
  service_name: ServiceType;
  sector: SectorType;
  car_removals: number;
  motorcycle_removals: number;
}

const Form = () => {
  const [formData, setFormData] = useState<FormData>({
    responsible_name: '',
    service_name: 'ordinario',
    sector: 'GEOTRAN - 1º Distrito',
    car_removals: 0,
    motorcycle_removals: 0
  });

  const [infractions, setInfractions] = useState<Infraction[]>([
    { infraction_type: infractionOptions[0], quantity: 0 }
  ]);

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {
    const { name, value } = e.target;
    setFormData(prev => ({
      ...prev,
      [name]: value,
    }));
  };

  const addInfraction = () => {
    setInfractions([...infractions, { infraction_type: infractionOptions[0], quantity: 0 }]);
  };

  const handleInfractionChange = (index: number, e: React.ChangeEvent<HTMLSelectElement | HTMLInputElement>) => {
    const { name, value } = e.target;
    const updatedInfractions = [...infractions];
    updatedInfractions[index][name] = name === 'quantity' ? parseInt(value, 10) : value;
    setInfractions(updatedInfractions);
  };

  const removeInfraction = (index: number) => {
    const updatedInfractions = [...infractions];
    updatedInfractions.splice(index, 1);
    setInfractions(updatedInfractions);
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();

    const reportData = {
      ...formData,
      infractions: infractions,
    };

    try {
      const { data, error } = await supabase
        .from('geotranote_reports')
        .insert([reportData]);

      if (error) {
        console.error('Erro ao inserir dados:', error);
        alert('Erro ao salvar o relatório.');
      } else {
        console.log('Dados inseridos com sucesso:', data);
        alert('Relatório salvo com sucesso!');
      }
    } catch (error) {
      console.error('Erro ao inserir dados:', error);
      alert('Erro ao salvar o relatório.');
    }
  };

  return (
    <div className="container mx-auto p-4">
      <h1 className="text-2xl font-bold mb-4">Formulário GEOTRANOTE</h1>
      <form onSubmit={handleSubmit} className="space-y-4">
        <div>
          <label htmlFor="responsible_name" className="block text-sm font-medium text-gray-700">Nome do Responsável:</label>
          <input
            type="text"
            id="responsible_name"
            name="responsible_name"
            value={formData.responsible_name}
            onChange={handleInputChange}
            className="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm"
            required
          />
        </div>

        <div>
          <label htmlFor="service_name" className="block text-sm font-medium text-gray-700">Tipo de Serviço:</label>
          <select
            id="service_name"
            name="service_name"
            value={formData.service_name}
            onChange={handleInputChange}
            className="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm"
            required
          >
            <option value="ordinario">Ordinário</option>
            <option value="operacao">Operação</option>
            <option value="ras">RAS</option>
          </select>
        </div>

        <div>
          <label htmlFor="sector" className="block text-sm font-medium text-gray-700">Setor:</label>
          <select
            id="sector"
            name="sector"
            value={formData.sector}
            onChange={handleInputChange}
            className="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm"
            required
          >
            <option value="GEOTRAN - 1º Distrito">GEOTRAN - 1º Distrito</option>
            <option value="GEOTRAN - 2º Distrito">GEOTRAN - 2º Distrito</option>
            <option value="GEOTRAN - 3º/4º Distrito">GEOTRAN - 3º/4º Distrito</option>
            <option value="1º Distrito">1º Distrito</option>
            <option value="2º Distrito">2º Distrito</option>
            <option value="3º Distrito">3º Distrito</option>
            <option value="4º Distrito">4º Distrito</option>
            <option value="GEDAM">GEDAM</option>
            <option value="GRE">GRE</option>
            <option value="GMAP">GMAP</option>
            <option value="ROMU">ROMU</option>
            <option value="RAS">RAS</option>
            <option value="Operação">Operação</option>
          </select>
        </div>

        <div>
          <label htmlFor="car_removals" className="block text-sm font-medium text-gray-700">Remoções de Carros:</label>
          <input
            type="number"
            id="car_removals"
            name="car_removals"
            value={formData.car_removals}
            onChange={handleInputChange}
            className="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm"
            required
          />
        </div>

        <div>
          <label htmlFor="motorcycle_removals" className="block text-sm font-medium text-gray-700">Remoções de Motos:</label>
          <input
            type="number"
            id="motorcycle_removals"
            name="motorcycle_removals"
            value={formData.motorcycle_removals}
            onChange={handleInputChange}
            className="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm"
            required
          />
        </div>

        <div>
          <label className="block text-sm font-medium text-gray-700">Infrações:</label>
          {infractions.map((infraction, index) => (
            <div key={index} className="flex space-x-2 mb-2">
              <select
                name="infraction_type"
                value={infraction.infraction_type}
                onChange={(e) => handleInfractionChange(index, e)}
                className="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm"
              >
                {infractionOptions.map((option) => (
                  <option key={option} value={option}>{option}</option>
                ))}
              </select>
              <input
                type="number"
                name="quantity"
                value={infraction.quantity}
                onChange={(e) => handleInfractionChange(index, e)}
                className="mt-1 block w-24 rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm"
                required
              />
              <button
                type="button"
                onClick={() => removeInfraction(index)}
                className="px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-opacity-50"
              >
                Remover
              </button>
            </div>
          ))}
          <button
            type="button"
            onClick={addInfraction}
            className="px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-opacity-50"
          >
            Adicionar Infração
          </button>
        </div>

        <div>
          <button
            type="submit"
            className="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50"
          >
            Salvar Relatório
          </button>
        </div>
      </form>
    </div>
  );
};

export default Form;
